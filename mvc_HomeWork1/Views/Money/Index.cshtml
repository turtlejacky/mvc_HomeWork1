@model mvc_HomeWork1.Models.ViewModel.MoneyViewModel
@{
    Layout = "~/Views/Shared/_MoneyLayout.cshtml";
}


<div class="well">
    @using (Html.BeginForm(Html.BeginForm("Index", "Money", FormMethod.Post, new { @class = "form-horizontal" })))
    {
        <div class="form-group">
            <label for="category" class="col-sm-2 control-label">類別</label>
            <div class="col-sm-10">
                @Html.EnumDropDownListFor(x => x.RecordInput.Type, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label for="money" class="col-sm-2 control-label">金額</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(x => x.RecordInput.Money, new { @class = "form-control", placeholder = "金額" })
                @Html.ValidationMessageFor(x => x.RecordInput.Money, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label for="date" class="col-sm-2 control-label">日期</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(x => x.RecordInput.Date, new { @class = "form-control", placeholder = "mm-dd-yyyy" })
                @Html.ValidationMessageFor(x => x.RecordInput.Date, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="form-group">
            <label for="description" class="col-sm-2 control-label">備註</label>
            <div class="col-sm-10">
                @Html.TextAreaFor(x => x.RecordInput.Remarks, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.RecordInput.Remarks, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-8 col-sm-4">
                <button type="submit" class="btn btn-default">送出</button>
            </div>
        </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*<script type="text/javascript">
        jQuery.validator.addMethod('datetimerange', function (value, today) {
            if (!value) return false;
            var valueDateParts = value.split('-');
            var now = new Date();
            var dateValue = new Date(valueDateParts[2],
                (valueDateParts[1] - 1),
                valueDateParts[0],
                now.getHours(),
                now.getMinutes(),
                (now.getSeconds() + 5));
            return dateValue >= today;
        });
        jQuery.validator.unobtrusive.adapters.addMinMax('datetimerange');
    </script>*@
}

@Html.Partial("_recordTables", Model)


